@using FSDBugTracker.Models
@using Microsoft.AspNet.Identity
@model FSDBugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
    string userId = User.Identity.GetUserId();
}

<div class="main-container container-fluid">
    <div class="page-container">
        <div class="page-content">
            <!-- Page Breadcrumb -->
            <div class="page-breadcrumbs">
                <ul class="breadcrumb">
                    <li>
                        <i class="fa fa-home"></i>
                        <a href="@Url.Action("Index","Home")">Home</a>
                    </li>
                    <li class="active">Details</li>
                </ul>
            </div>
            <div class="page-header position-relative">
                <div class="header-title">
                    <h1>
                        Ticket Details
                    </h1>
                </div>
                <!--Header Buttons-->
                <div class="header-buttons">
                    <a class="sidebar-toggler" href="#">
                        <i class="fa fa-arrows-h"></i>
                    </a>
                    <a class="refresh" id="refresh-toggler" href="">
                        <i class="glyphicon glyphicon-refresh"></i>
                    </a>
                    <a class="fullscreen" id="fullscreen-toggler" href="#">
                        <i class="glyphicon glyphicon-fullscreen"></i>
                    </a>
                </div>
                <!--Header Buttons End-->
            </div>
            <!-- Page Body -->
            <div class="page-body">

                <div>
                    <h4>Ticket</h4>
                    <hr />
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.AssignedToUser.FirstName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.AssignedToUser.FirstName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.OwnerUser.FirstName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.OwnerUser.FirstName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Project.Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Project.Name)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.TicketPriority.TicketPriorityName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.TicketPriority.TicketPriorityName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.TicketStatus.TicketStatusName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.TicketStatus.TicketStatusName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.TicketType.TicketTypeName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.TicketType.TicketTypeName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Title)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Title)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Description)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Created)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Created)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Updated)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Updated)
                        </dd>

                    </dl>
                </div>

                
                @if (User.Identity.IsAuthenticated)
                {
                    using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(model => model.Id)

                        <div class="row" style="text-align:center">
                            <h4>Please Add Comment: </h4>
                            @Html.TextArea("Comment", new { rows = 4, style = "vertical-align: middle;" })

                        </div>
                        <div class="row" style="text-align:center;">
                            <button type="submit" style="text-align:center; border-radius:50%; height:50px; width: 50px;">+</button>
                        </div>
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-10">
                                    @foreach (var comment in Model.TicketComments.OrderByDescending(c => c.Created))
                                    {


                                        <h4><i>@comment.Created</i></h4>
                                        <h5>@comment.User.DisplayName</h5>
                                        <p>@comment.Comment</p>


                                        <hr />
                                        <div class="row">
                                            @if (User.IsInRole("Admin") || (User.IsInRole("SuperUser")))
                                            {

                                                @Html.ActionLink("Edit", "Edit", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })

                                                @Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })
                                            }
                                            else if (User.IsInRole("Project Manager") && Model.Project.ProjectUsers.Any(u => u.Id == userId))
                                            {

                                                @Html.ActionLink("Edit", "Edit", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })

                                                @Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })
                                            }
                                            else if (User.IsInRole("Submitter") && Model.OwnerUserId == userId)
                                            {

                                                @Html.ActionLink("Edit", "Edit", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })

                                                @Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })
                                            }
                                            else if (User.IsInRole("Developer") && Model.AssignedToUser.Id == userId)
                                            {

                                                @Html.ActionLink("Edit", "Edit", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })

                                                @Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comment.Id }, new { @class = "btn btn-default" })
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                    }
                }

                @if (User.IsInRole("Admin") || (User.IsInRole("SuperUser") || Model.Project.ProjectUsers.Any(u => u.Id == userId) || Model.OwnerUserId == userId))
                {
                    using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="TicketId" value="@Model.Id" />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-12">
                                        <h5>@TempData["invalid"]</h5>
                                        <label class="control-label">Attachment</label>
                                        <input type="file" name="image" class="form-control" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <input type="text" name="Description" class="form-control" placeholder="Description" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <input type="submit" value="Create Attachment" class="btn btn-success" />
                                    </div>
                                </div>

                            </div>
                        </div>
                    }
                }

                @foreach (TicketAttachment attachment in Model.TicketAttachments.OrderByDescending(d => d.Created))
                {
                    <hr />
                    <div class="row">
                        <div class="col-md-12">
                            <label class="control-label">Created By</label>
                            <p>@attachment.User.DisplayName</p>
                        </div>
                    </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label class="control-label">Created Date</label>
                                <p>@attachment.Created.ToString("d")</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label class="control-label">Description</label>
                                <p>@attachment.Description</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <img src="@attachment.MediaUrl" width="200" />
                            </div>
                        </div>
                        <div class="row">
                            @if (User.IsInRole("Admin") || (User.IsInRole("SuperUser")))
                            {
                                @Html.ActionLink("Edit", "Edit", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                                @Html.ActionLink("Delete", "Delete", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                            }
                            else if (User.IsInRole("Project Manager") && Model.Project.ProjectUsers.Any(u => u.Id == userId))
                            {
                                @Html.ActionLink("Edit", "Edit", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                                @Html.ActionLink("Delete", "Delete", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                            }
                            else if (User.IsInRole("Submitter") && attachment.UserId == userId)
                            {
                                @Html.ActionLink("Edit", "Edit", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                                @Html.ActionLink("Delete", "Delete", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                            }
                            else if (User.IsInRole("Developer") && attachment.UserId == userId)
                            {
                                @Html.ActionLink("Edit", "Edit", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                                @Html.ActionLink("Delete", "Delete", "TicketAttachments", new { id = attachment.Id }, new { @class = "btn btn-default" })
                            }
                        </div>
                }
                <p>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                    @Html.ActionLink("Back to List", "Index")
                </p>
            </div>
        </div>
    </div>
</div>
