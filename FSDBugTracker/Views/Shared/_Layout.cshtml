@using FSDBugTracker.Helpers
@using Microsoft.AspNet.Identity
@{
    var urHelper = new UserRolesHelper();
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>Christian Dubuche's Bug Tracker</title>

    <meta name="description" content="Dashboard" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="shortcut icon" href="~/assets/img/favicon.png" type="image/x-icon">

    <!--Basic Styles-->
    <link href="~/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link id="bootstrap-rtl-link" href="" rel="stylesheet" />
    <link href="~/assets/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/assets/css/weather-icons.min.css" rel="stylesheet" />

    <!--Fonts-->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,600,700,300" rel="stylesheet" type="text/css">
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,300' rel='stylesheet' type='text/css'>

    <!--Beyond styles-->
    <link id="beyond-link" href="~/assets/css/beyond.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/css/demo.min.css" rel="stylesheet" />
    <link href="~/assets/css/typicons.min.css" rel="stylesheet" />
    <link href="~/assets/css/animate.min.css" rel="stylesheet" />
    <link id="skin-link" href="" rel="stylesheet" type="text/css" />

    @section styles{
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
    }

    <!--Skin Script: Place this script in head to load scripts for skins and rtl support-->
    <script src="~/assets/js/skins.js"></script>

</head>

<body>

    <div class="navbar">
        <div class="navbar-inner">
            <div class="navbar-container">
                <!-- Navbar Barnd -->
                <div class="navbar-header pull-left">
                    <a href="#" class="navbar-brand">
                        <small>
                            <img src="~/assets/img/logo.png" alt="" />
                        </small>
                    </a>
                </div>
                <!-- /Navbar Barnd -->
                <!-- Sidebar Collapse -->
                <div class="sidebar-collapse" id="sidebar-collapse">
                    <i class="collapse-icon fa fa-bars"></i>
                </div>
                <!-- /Sidebar Collapse -->
                <!-- Account Area and Settings --->
                <div class="navbar-header pull-right">
                    <div class="navbar-account">
                        <ul class="account-area">
                            <li>
                                <!--Tasks Dropdown-->
                                <!--/Tasks Dropdown-->
                            </li>
                            <li>
                                <a class="login-area dropdown-toggle" data-toggle="dropdown">
                                    <div class="avatar" title="View your public profile">
                                        <img src="~/assets/img/avatars/Me.png">
                                    </div>
                                    <section>
                                        @if (Request.IsAuthenticated)
                                        {
                                            var userId = HttpContext.Current.User.Identity.GetUserId();
                                            if (urHelper.IsUserInRole(userId, "SuperUser"))
                                            {
                                        <h2><span class="profile">SuperUser</span></h2>
                                            }
                                            else if (urHelper.IsUserInRole(userId, "Admin"))
                                            {
                                        <h2><span class="profile">Admin</span></h2>
                                            }
                                            else if (urHelper.IsUserInRole(userId, "Project Manager"))
                                            {
                                        <h2><span class="profile"> Project Manager</span></h2>
                                            }
                                            else if (urHelper.IsUserInRole(userId, "Developer"))
                                            {
                                        <h2><span class="profile"> Developer</span></h2>
                                            }
                                            else if (urHelper.IsUserInRole(userId, "Submitter"))
                                            {
                                        <h2><span class="profile"> Submitter</span></h2>
                                            }
                                            else
                                            {
                                        <h2><span class="profile"> Guest</span></h2>
                                            }
                                        }
                                        else
                                        {
                                        <h2><span class="profile">NonUser</span></h2>
                                        }
                                    </section>
                                </a>
                                <!--Login Area Dropdown-->
                                <ul class="pull-right dropdown-menu dropdown-arrow dropdown-login-area">

                                    <li class="email"><a>cdubuche@outlook.com</a></li>
                                    <!--Avatar Area-->
                                    <li>
                                        <div class="avatar-area">
                                            <img src="~/assets/img/avatars/Me.png" class="avatar">
                                            <span class="caption">Change Photo</span>
                                        </div>
                                    </li>
                                    <!--Avatar Area-->
                                    @if (!Request.IsAuthenticated)
                                    {
                                    <li class="edit">
                                        <a href="https://www.coderfoundry.com/christiandubuche" target="_blank" class="pull-left">Portfolio Page</a>
                                    </li>
                                    }

                                    else
                                    {
                                    <li class="edit">
                                        <a href="@Url.Action("ChangePassword", "Manage")">Change Password</a>
                                    </li>
                                    }

                                    <!--When the user comes to the site without first logging through a registered or demo account they'll see a log in link, after loggin in the link becomes a signout link*-->
                                    <!--Must use "Else If" because of the role conditions, otherwise VS throws an error -->
                                    @if (!Request.IsAuthenticated)
                                    {
                                    <li class="dropdown-footer">
                                        <a href="@Url.Action("Login", "Account")">Log In</a>
                                    </li>
                                    }
                                    else
                                    {
                                    <li class="dropdown-footer">
                                        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                                            {
                                            @Html.AntiForgeryToken()
                                            <a href="javascript:document.getElementById('logoutForm').submit()">Sign Off</a>
                                            }
                                    </li>
                                    }
                                </ul>
                                <!--/Login Area Dropdown-->
                            </li>
                        </ul>
                    </div>
                </div>
                <!-- /Account Area and Settings -->
            </div>
        </div>
    </div>

    <div class="main-container container-fluid">
        <!-- Page Container -->
        <div class="page-container">
            <div class="page-sidebar" id="sidebar">
                <!-- Page Sidebar Header-->
                <div class="sidebar-header-wrapper">
                    <input type="text" class="searchinput" />
                    <i class="searchicon fa fa-search"></i>
                    <div class="searchhelper">Search Reports, Charts, Emails or Notifications</div>
                </div>
                <!-- /Page Sidebar Header -->
                <!-- Sidebar Menu -->
                <ul class="nav sidebar-menu">
                    <!--Dashboard-->
                    <li class="active">
                        <a href="@Url.Action("Index","Home")">
                            <i class="menu-icon glyphicon glyphicon-home"></i>
                            <span class="menu-text"> Dashboard </span>
                        </a>
                    </li>

                    <!--Forms -- Renaming to User Mgmt-->
                    <li>
                        <a href="#" class="menu-dropdown">
                            <i class="menu-icon fa fa-pencil-square-o"></i>
                            <span class="menu-text"> User Management </span>
                            <i class="menu-expand"></i>
                        </a>

                        <ul class="submenu">
                            <!--Renaming to Bugtracking user roles -->
                            <li>
                                @Html.ActionLink("All Users", "Index", "Users")
                            </li>
                            <li>
                                @Html.ActionLink("Administrators", "Index", "Users", new { roleName = "Admin" }, null)
                            </li>
                            <li>
                                @Html.ActionLink("Project Managers", "Index", "Users", new { roleName = "Project Manager" }, null)
                            </li>
                            <li>
                                @Html.ActionLink("Developers", "Index", "Users", new { roleName = "Developer" }, null)
                            </li>
                            <li>
                                @Html.ActionLink("Submitters", "Index", "Users", new { roleName = "Submitter" }, null)
                            </li>
                        </ul>
                    </li>

                    <li>
                        <a href="#" class="menu-dropdown">
                            <i class="menu-icon fa fa-pencil-square-o"></i>
                            <span class="menu-text"> Projects </span>
                            <i class="menu-expand"></i>
                        </a>
                        <ul class="submenu">
                            <li>
                                @Html.ActionLink("All Projects", "Index", "Projects")
                            </li>
                        </ul>
                    </li>

                    <li>
                        <a href="#" class="menu-dropdown">
                            <i class="menu-icon fa fa-pencil-square-o"></i>
                            <span class="menu-text"> Tickets </span>
                            <i class="menu-expand"></i>
                        </a>
                        <ul class="submenu">
                            <li>
                                @Html.ActionLink("Ticket List", "Index", "Tickets")
                            </li>
                        </ul>
                    </li>

                    <li>
                        <a href="#" class="menu-dropdown">
                            <i class="menu-icon fa fa-pencil-square-o"></i>
                            <span class="menu-text"> Notifications </span>
                            <i class="menu-expand"></i>
                        </a>
                        <ul class="submenu">
                            <li>
                                @Html.ActionLink("Ticket Notifications", "Index", "Notifications")
                            </li>

                        </ul>
                    </li>
                </ul>
                <!-- /Sidebar Menu -->
            </div>

            @RenderBody()

        </div>

        <footer style="text-align:right;">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                        <ul class="list-inline text-center">
                            <li>
                                <a href="https://www.coderfoundry.com/christiandubuche" target="_blank">
                                    @*Portfolio Site*@
                                    <span class="fa-stack fa-lg">
                                        <i class="fa fa-circle fa-stack-2x"></i>
                                        <i class="fa fa-briefcase fa-stack-1x fa-inverse"></i>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="https://www.linkedin.com/in/christiandubuche" target="_blank">
                                    @*LinkedIn Profile*@
                                    <span class="fa-stack fa-lg">
                                        <i class="fa fa-circle fa-stack-2x"></i>
                                        <i class="fa fa-linkedin fa-stack-1x fa-inverse"></i>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="https://twitter.com/ChrisDubuche" target="_blank">
                                    @*Twitter Profile*@
                                    <span class="fa-stack fa-lg">
                                        <i class="fa fa-circle fa-stack-2x"></i>
                                        <i class="fa fa-twitter fa-stack-1x fa-inverse"></i>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="https://github.com/ChrisDubuche" target="_blank">
                                    @*GitHub Profile*@
                                    <span class="fa-stack fa-lg">
                                        <i class="fa fa-circle fa-stack-2x"></i>
                                        <i class="fa fa-github fa-stack-1x fa-inverse"></i>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="https://stackoverflow.com/users/8138529" target="_blank">
                                    @*Stackoverflow Profile*@
                                    <span class="fa-stack fa-lg">
                                        <i class="fa fa-circle fa-stack-2x"></i>
                                        <i class="fa fa-stack-overflow fa-stack-1x fa-inverse"></i>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <p class="copyright text-muted">Copyright &copy; <strong>Christian Yves Dubuche @DateTime.Now.Year</strong></p>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </footer>

    </div>

    <script src="~/assets/js/jquery.min.js"></script>
    @Scripts.Render("~/bundles/bootstrap")

    <!--Basic Scripts-->
    <script src="~/assets/js/slimscroll/jquery.slimscroll.min.js"></script>

    <!--Beyond Scripts-->
    <script src="~/assets/js/beyond.js"></script>

    <!--Sparkline Charts Needed Scripts-->
    <script src="~/assets/js/charts/sparkline/jquery.sparkline.js"></script>
    <script src="~/assets/js/charts/sparkline/sparkline-init.js"></script>

    <!--Easy Pie Charts Needed Scripts-->
    <script src="~/assets/js/charts/easypiechart/jquery.easypiechart.js"></script>
    <script src="~/assets/js/charts/easypiechart/easypiechart-init.js"></script>

    <!--Flot Charts Needed Scripts-->
    <script src="~/assets/js/charts/flot/jquery.flot.js"></script>
    <script src="~/assets/js/charts/flot/jquery.flot.resize.js"></script>
    <script src="~/assets/js/charts/flot/jquery.flot.pie.js"></script>
    <script src="~/assets/js/charts/flot/jquery.flot.tooltip.js"></script>
    <script src="~/assets/js/charts/flot/jquery.flot.orderBars.js"></script>

    @section scripts{
        <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

    }

    <script>
        // If you want to draw your charts with Theme colors you must run initiating charts after that current skin is loaded
        $(window).bind("load", function () {

            /*Sets Themed Colors Based on Themes*/
            themeprimary = getThemeColorFromCss('themeprimary');
            themesecondary = getThemeColorFromCss('themesecondary');
            themethirdcolor = getThemeColorFromCss('themethirdcolor');
            themefourthcolor = getThemeColorFromCss('themefourthcolor');
            themefifthcolor = getThemeColorFromCss('themefifthcolor');

            //Sets The Hidden Chart Width
            $('#dashboard-bandwidth-chart')
                .data('width', $('.box-tabbs')
                    .width() - 20);

            //-------------------------Visitor Sources Pie Chart----------------------------------------//
            var data = [
                {
                    data: [[1, 21]],
                    color: '#fb6e52'
                },
                {
                    data: [[1, 12]],
                    color: '#e75b8d'
                },
                {
                    data: [[1, 11]],
                    color: '#a0d468'
                },
                {
                    data: [[1, 10]],
                    color: '#ffce55'
                },
                {
                    data: [[1, 46]],
                    color: '#5db2ff'
                }
            ];
            var placeholder = $("#dashboard-pie-chart-sources");
            placeholder.unbind();

            $.plot(placeholder, data, {
                series: {
                    pie: {
                        innerRadius: 0.45,
                        show: true,
                        stroke: {
                            width: 4
                        }
                    }
                }
            });

            //------------------------------Visit Chart------------------------------------------------//
            var data2 = [{
                color: themesecondary,
                label: "Direct Visits",
                data: [[3, 2], [4, 5], [5, 4], [6, 11], [7, 12], [8, 11], [9, 8], [10, 14], [11, 12], [12, 16], [13, 9],
                [14, 10], [15, 14], [16, 15], [17, 9]],

                lines: {
                    show: true,
                    fill: true,
                    lineWidth: .1,
                    fillColor: {
                        colors: [{
                            opacity: 0
                        }, {
                            opacity: 0.4
                        }]
                    }
                },
                points: {
                    show: false
                },
                shadowSize: 0
            },
            {
                color: themeprimary,
                label: "Referral Visits",
                data: [[3, 10], [4, 13], [5, 12], [6, 16], [7, 19], [8, 19], [9, 24], [10, 19], [11, 18], [12, 21], [13, 17],
                [14, 14], [15, 12], [16, 14], [17, 15]],
                bars: {
                    order: 1,
                    show: true,
                    borderWidth: 0,
                    barWidth: 0.4,
                    lineWidth: .5,
                    fillColor: {
                        colors: [{
                            opacity: 0.4
                        }, {
                            opacity: 1
                        }]
                    }
                }
            },
            {
                color: themethirdcolor,
                label: "Search Engines",
                data: [[3, 14], [4, 11], [5, 10], [6, 9], [7, 5], [8, 8], [9, 5], [10, 6], [11, 4], [12, 7], [13, 4],
                [14, 3], [15, 4], [16, 6], [17, 4]],
                lines: {
                    show: true,
                    fill: false,
                    fillColor: {
                        colors: [{
                            opacity: 0.3
                        }, {
                            opacity: 0
                        }]
                    }
                },
                points: {
                    show: true
                }
            }
            ];
            var options = {
                legend: {
                    show: false
                },
                xaxis: {
                    tickDecimals: 0,
                    color: '#f3f3f3'
                },
                yaxis: {
                    min: 0,
                    color: '#f3f3f3',
                    tickFormatter: function (val, axis) {
                        return "";
                    },
                },
                grid: {
                    hoverable: true,
                    clickable: false,
                    borderWidth: 0,
                    aboveData: false,
                    color: '#fbfbfb'

                },
                tooltip: true,
                tooltipOpts: {
                    defaultTheme: false,
                    content: " <b>%x May</b> , <b>%s</b> : <span>%y</span>",
                }
            };
            var placeholder = $("#dashboard-chart-visits");
            var plot = $.plot(placeholder, data2, options);

            //------------------------------Real-Time Chart-------------------------------------------//
            var realTimedata = [],
                realTimedata2 = [],
                totalPoints = 300;

            var getSeriesObj = function () {
                return [
                    {
                        data: getRandomData(),
                        lines: {
                            show: true,
                            lineWidth: 1,
                            fill: true,
                            fillColor: {
                                colors: [
                                    {
                                        opacity: 0
                                    }, {
                                        opacity: 1
                                    }
                                ]
                            },
                            steps: false
                        },
                        shadowSize: 0
                    }, {
                        data: getRandomData2(),
                        lines: {
                            lineWidth: 0,
                            fill: true,
                            fillColor: {
                                colors: [
                                    {
                                        opacity: .5
                                    }, {
                                        opacity: 1
                                    }
                                ]
                            },
                            steps: false
                        },
                        shadowSize: 0
                    }
                ];
            };
            function getRandomData() {
                if (realTimedata.length > 0)
                    realTimedata = realTimedata.slice(1);

                // Do a random walk

                while (realTimedata.length < totalPoints) {

                    var prev = realTimedata.length > 0 ? realTimedata[realTimedata.length - 1] : 50,
                        y = prev + Math.random() * 10 - 5;

                    if (y < 0) {
                        y = 0;
                    } else if (y > 100) {
                        y = 100;
                    }
                    realTimedata.push(y);
                }

                // Zip the generated y values with the x values

                var res = [];
                for (var i = 0; i < realTimedata.length; ++i) {
                    res.push([i, realTimedata[i]]);
                }

                return res;
            }
            function getRandomData2() {
                if (realTimedata2.length > 0)
                    realTimedata2 = realTimedata2.slice(1);

                // Do a random walk

                while (realTimedata2.length < totalPoints) {

                    var prev = realTimedata2.length > 0 ? realTimedata[realTimedata2.length] : 50,
                        y = prev - 25;

                    if (y < 0) {
                        y = 0;
                    } else if (y > 100) {
                        y = 100;
                    }
                    realTimedata2.push(y);
                }


                var res = [];
                for (var i = 0; i < realTimedata2.length; ++i) {
                    res.push([i, realTimedata2[i]]);
                }

                return res;
            }
            // Set up the control widget
            var updateInterval = 500;
            var plot = $.plot("#dashboard-chart-realtime", getSeriesObj(), {
                yaxis: {
                    color: '#f3f3f3',
                    min: 0,
                    max: 100,
                    tickFormatter: function (val, axis) {
                        return "";
                    }
                },
                xaxis: {
                    color: '#f3f3f3',
                    min: 0,
                    max: 100,
                    tickFormatter: function (val, axis) {
                        return "";
                    }
                },
                grid: {
                    hoverable: true,
                    clickable: false,
                    borderWidth: 0,
                    aboveData: false
                },
                colors: ['#eee', themeprimary],
            });

            function update() {

                plot.setData(getSeriesObj());

                plot.draw();
                setTimeout(update, updateInterval);
            }
            update();

            //-------------------------Initiates Easy Pie Chart instances in page--------------------//
            InitiateEasyPieChart.init();

            //-------------------------Initiates Sparkline Chart instances in page------------------//
            InitiateSparklineCharts.init();
        });
    </script>

    <script src="~/Scripts/jquery.dataTables.js"></script>

    <script>$('.table').DataTable();</script>

    <script>
        $("#collapse-icon").click(function () {
            var target = $("#sidebar");
            $(".page-body").position().left = target.width + 2;

        });
    </script>

    @RenderSection("scripts", required: false)

</body>

</html>
